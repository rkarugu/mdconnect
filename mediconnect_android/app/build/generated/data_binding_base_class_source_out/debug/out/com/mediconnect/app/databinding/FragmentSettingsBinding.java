// Generated by view binder compiler. Do not edit!
package com.mediconnect.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.mediconnect.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDeleteAccount;

  @NonNull
  public final CardView cardAccount;

  @NonNull
  public final CardView cardAppSettings;

  @NonNull
  public final SwitchMaterial switchDarkMode;

  @NonNull
  public final SwitchMaterial switchNotifications;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView tvVersion;

  private FragmentSettingsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnDeleteAccount, @NonNull CardView cardAccount,
      @NonNull CardView cardAppSettings, @NonNull SwitchMaterial switchDarkMode,
      @NonNull SwitchMaterial switchNotifications, @NonNull TextView title,
      @NonNull TextView tvVersion) {
    this.rootView = rootView;
    this.btnDeleteAccount = btnDeleteAccount;
    this.cardAccount = cardAccount;
    this.cardAppSettings = cardAppSettings;
    this.switchDarkMode = switchDarkMode;
    this.switchNotifications = switchNotifications;
    this.title = title;
    this.tvVersion = tvVersion;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteAccount;
      Button btnDeleteAccount = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteAccount == null) {
        break missingId;
      }

      id = R.id.cardAccount;
      CardView cardAccount = ViewBindings.findChildViewById(rootView, id);
      if (cardAccount == null) {
        break missingId;
      }

      id = R.id.cardAppSettings;
      CardView cardAppSettings = ViewBindings.findChildViewById(rootView, id);
      if (cardAppSettings == null) {
        break missingId;
      }

      id = R.id.switchDarkMode;
      SwitchMaterial switchDarkMode = ViewBindings.findChildViewById(rootView, id);
      if (switchDarkMode == null) {
        break missingId;
      }

      id = R.id.switchNotifications;
      SwitchMaterial switchNotifications = ViewBindings.findChildViewById(rootView, id);
      if (switchNotifications == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.tvVersion;
      TextView tvVersion = ViewBindings.findChildViewById(rootView, id);
      if (tvVersion == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ConstraintLayout) rootView, btnDeleteAccount, cardAccount,
          cardAppSettings, switchDarkMode, switchNotifications, title, tvVersion);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
