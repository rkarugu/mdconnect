// Generated by view binder compiler. Do not edit!
package com.mediconnect.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.mediconnect.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentApplicationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Chip chipAccepted;

  @NonNull
  public final Chip chipAll;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final Chip chipPending;

  @NonNull
  public final Chip chipRejected;

  @NonNull
  public final ProgressBar loadMoreProgressBar;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView tvNoApplications;

  private FragmentApplicationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Chip chipAccepted, @NonNull Chip chipAll, @NonNull ChipGroup chipGroup,
      @NonNull Chip chipPending, @NonNull Chip chipRejected,
      @NonNull ProgressBar loadMoreProgressBar, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerView, @NonNull TextView title,
      @NonNull TextView tvNoApplications) {
    this.rootView = rootView;
    this.chipAccepted = chipAccepted;
    this.chipAll = chipAll;
    this.chipGroup = chipGroup;
    this.chipPending = chipPending;
    this.chipRejected = chipRejected;
    this.loadMoreProgressBar = loadMoreProgressBar;
    this.progressBar = progressBar;
    this.recyclerView = recyclerView;
    this.title = title;
    this.tvNoApplications = tvNoApplications;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentApplicationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentApplicationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_applications, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentApplicationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chipAccepted;
      Chip chipAccepted = ViewBindings.findChildViewById(rootView, id);
      if (chipAccepted == null) {
        break missingId;
      }

      id = R.id.chipAll;
      Chip chipAll = ViewBindings.findChildViewById(rootView, id);
      if (chipAll == null) {
        break missingId;
      }

      id = R.id.chipGroup;
      ChipGroup chipGroup = ViewBindings.findChildViewById(rootView, id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.chipPending;
      Chip chipPending = ViewBindings.findChildViewById(rootView, id);
      if (chipPending == null) {
        break missingId;
      }

      id = R.id.chipRejected;
      Chip chipRejected = ViewBindings.findChildViewById(rootView, id);
      if (chipRejected == null) {
        break missingId;
      }

      id = R.id.loadMoreProgressBar;
      ProgressBar loadMoreProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadMoreProgressBar == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerView;
      RecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.tvNoApplications;
      TextView tvNoApplications = ViewBindings.findChildViewById(rootView, id);
      if (tvNoApplications == null) {
        break missingId;
      }

      return new FragmentApplicationsBinding((ConstraintLayout) rootView, chipAccepted, chipAll,
          chipGroup, chipPending, chipRejected, loadMoreProgressBar, progressBar, recyclerView,
          title, tvNoApplications);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
