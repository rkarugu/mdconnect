// Generated by view binder compiler. Do not edit!
package com.mediconnect.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.mediconnect.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentJobsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnFilter;

  @NonNull
  public final Button btnSearch;

  @NonNull
  public final CardView cardSearch;

  @NonNull
  public final TextInputEditText etSearchJobs;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView rvJobs;

  @NonNull
  public final SwipeRefreshLayout swipeRefresh;

  @NonNull
  public final TextInputLayout tilSearchJobs;

  @NonNull
  public final TextView tvJobsTitle;

  @NonNull
  public final TextView tvNoJobs;

  private FragmentJobsBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnFilter,
      @NonNull Button btnSearch, @NonNull CardView cardSearch,
      @NonNull TextInputEditText etSearchJobs, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView rvJobs, @NonNull SwipeRefreshLayout swipeRefresh,
      @NonNull TextInputLayout tilSearchJobs, @NonNull TextView tvJobsTitle,
      @NonNull TextView tvNoJobs) {
    this.rootView = rootView;
    this.btnFilter = btnFilter;
    this.btnSearch = btnSearch;
    this.cardSearch = cardSearch;
    this.etSearchJobs = etSearchJobs;
    this.progressBar = progressBar;
    this.rvJobs = rvJobs;
    this.swipeRefresh = swipeRefresh;
    this.tilSearchJobs = tilSearchJobs;
    this.tvJobsTitle = tvJobsTitle;
    this.tvNoJobs = tvNoJobs;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentJobsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentJobsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_jobs, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentJobsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnFilter;
      Button btnFilter = ViewBindings.findChildViewById(rootView, id);
      if (btnFilter == null) {
        break missingId;
      }

      id = R.id.btnSearch;
      Button btnSearch = ViewBindings.findChildViewById(rootView, id);
      if (btnSearch == null) {
        break missingId;
      }

      id = R.id.cardSearch;
      CardView cardSearch = ViewBindings.findChildViewById(rootView, id);
      if (cardSearch == null) {
        break missingId;
      }

      id = R.id.etSearchJobs;
      TextInputEditText etSearchJobs = ViewBindings.findChildViewById(rootView, id);
      if (etSearchJobs == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.rvJobs;
      RecyclerView rvJobs = ViewBindings.findChildViewById(rootView, id);
      if (rvJobs == null) {
        break missingId;
      }

      id = R.id.swipeRefresh;
      SwipeRefreshLayout swipeRefresh = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefresh == null) {
        break missingId;
      }

      id = R.id.tilSearchJobs;
      TextInputLayout tilSearchJobs = ViewBindings.findChildViewById(rootView, id);
      if (tilSearchJobs == null) {
        break missingId;
      }

      id = R.id.tvJobsTitle;
      TextView tvJobsTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvJobsTitle == null) {
        break missingId;
      }

      id = R.id.tvNoJobs;
      TextView tvNoJobs = ViewBindings.findChildViewById(rootView, id);
      if (tvNoJobs == null) {
        break missingId;
      }

      return new FragmentJobsBinding((ConstraintLayout) rootView, btnFilter, btnSearch, cardSearch,
          etSearchJobs, progressBar, rvJobs, swipeRefresh, tilSearchJobs, tvJobsTitle, tvNoJobs);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
