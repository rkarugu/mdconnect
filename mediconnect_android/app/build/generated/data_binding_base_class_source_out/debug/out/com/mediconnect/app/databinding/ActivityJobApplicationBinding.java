// Generated by view binder compiler. Do not edit!
package com.mediconnect.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.mediconnect.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityJobApplicationBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button btnSubmitApplication;

  @NonNull
  public final MaterialButton btnUploadResume;

  @NonNull
  public final CheckBox cbUseProfile;

  @NonNull
  public final TextInputEditText etCoverLetter;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextInputLayout tilCoverLetter;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView tvEmployer;

  @NonNull
  public final TextView tvJobTitle;

  @NonNull
  public final TextView tvSelectedFile;

  private ActivityJobApplicationBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button btnSubmitApplication, @NonNull MaterialButton btnUploadResume,
      @NonNull CheckBox cbUseProfile, @NonNull TextInputEditText etCoverLetter,
      @NonNull ProgressBar progressBar, @NonNull TextInputLayout tilCoverLetter,
      @NonNull Toolbar toolbar, @NonNull TextView tvEmployer, @NonNull TextView tvJobTitle,
      @NonNull TextView tvSelectedFile) {
    this.rootView = rootView;
    this.btnSubmitApplication = btnSubmitApplication;
    this.btnUploadResume = btnUploadResume;
    this.cbUseProfile = cbUseProfile;
    this.etCoverLetter = etCoverLetter;
    this.progressBar = progressBar;
    this.tilCoverLetter = tilCoverLetter;
    this.toolbar = toolbar;
    this.tvEmployer = tvEmployer;
    this.tvJobTitle = tvJobTitle;
    this.tvSelectedFile = tvSelectedFile;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityJobApplicationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityJobApplicationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_job_application, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityJobApplicationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSubmitApplication;
      Button btnSubmitApplication = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitApplication == null) {
        break missingId;
      }

      id = R.id.btnUploadResume;
      MaterialButton btnUploadResume = ViewBindings.findChildViewById(rootView, id);
      if (btnUploadResume == null) {
        break missingId;
      }

      id = R.id.cbUseProfile;
      CheckBox cbUseProfile = ViewBindings.findChildViewById(rootView, id);
      if (cbUseProfile == null) {
        break missingId;
      }

      id = R.id.etCoverLetter;
      TextInputEditText etCoverLetter = ViewBindings.findChildViewById(rootView, id);
      if (etCoverLetter == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.tilCoverLetter;
      TextInputLayout tilCoverLetter = ViewBindings.findChildViewById(rootView, id);
      if (tilCoverLetter == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.tvEmployer;
      TextView tvEmployer = ViewBindings.findChildViewById(rootView, id);
      if (tvEmployer == null) {
        break missingId;
      }

      id = R.id.tvJobTitle;
      TextView tvJobTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvJobTitle == null) {
        break missingId;
      }

      id = R.id.tvSelectedFile;
      TextView tvSelectedFile = ViewBindings.findChildViewById(rootView, id);
      if (tvSelectedFile == null) {
        break missingId;
      }

      return new ActivityJobApplicationBinding((CoordinatorLayout) rootView, btnSubmitApplication,
          btnUploadResume, cbUseProfile, etCoverLetter, progressBar, tilCoverLetter, toolbar,
          tvEmployer, tvJobTitle, tvSelectedFile);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
